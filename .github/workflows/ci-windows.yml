name: CI (Windows)
on:
  workflow_call:
jobs:
  build:
    name: Windows
    runs-on: windows-2022
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: '2'
    steps:
    - name: Checkout source
      uses: actions/checkout@v3
    - name: Cache Cargo home
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-cargo
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.*
        cache: true
        cache-key-prefix: ${{ runner.os }}-qt
    - name: Cache Vulkan SDK
      uses: actions/cache@v3
      with:
        path: C:\VulkanSDK
        key: ${{ runner.os }}-vulkan-${{ hashFiles('.github/workflows/ci-windows.yml') }}
      id: cache-vulkan
    - name: Install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.239.0/windows/VulkanSDK-1.3.239.0-Installer.exe" -OutFile VulkanSDK.exe
        .\VulkanSDK.exe --root C:\VulkanSDK --accept-licenses --default-answer --confirm-command install
      if: ${{ steps.cache-vulkan.outputs.cache-hit != 'true' }}
    - name: Set Vulkan SDK path
      run:  echo "VULKAN_SDK=C:\VulkanSDK" >> $env:GITHUB_ENV
    - name: Cache build files
      uses: actions/cache@v3
      with:
        path: |
          cmake*.*
          build
          src/target
        key: ${{ runner.os }}-build-files-${{ github.run_id }}
        restore-keys: ${{ runner.os }}-build-files
    - name: Run CMake
      run: cmake --preset windows-release .
    - name: Build
      run: cmake --build --preset windows-release
    - name: Run Clippy
      run: cargo clippy --release
      working-directory: src
    - name: Export artifacts
      run: cmake --install build --prefix dist
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: obliteration-win-x64
        path: dist
