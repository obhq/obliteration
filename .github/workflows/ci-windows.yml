name: CI (Windows)
on:
  workflow_call:
env:
  CMAKE_BUILD_PARALLEL_LEVEL: '4'
jobs:
  build:
    name: Windows
    runs-on: windows-2022
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: Install Ninja
      run: choco install ninja
    - name: Generate cache keys
      run: |
        echo "cargo=${{ runner.os }}-cargo" >> $env:GITHUB_OUTPUT
        echo "vulkan=${{ runner.os }}-vulkan-1.3.239.0" >> $env:GITHUB_OUTPUT
      id: cache-keys
    - name: Install Qt
      run: |
        Invoke-WebRequest `
          -Uri "https://download.qt.io/online/qtsdkrepository/windows_x86/desktop/qt6_660/qt.qt6.660.win64_msvc2019_64/6.6.0-0-202310040911qtbase-Windows-Windows_10_22H2-MSVC2019-Windows-Windows_10_22H2-X86_64.7z" `
          -OutFile qt-base.7z
        Invoke-WebRequest `
          -Uri "https://download.qt.io/online/qtsdkrepository/windows_x86/desktop/qt6_660/qt.qt6.660.win64_msvc2019_64/6.6.0-0-202310040911qtsvg-Windows-Windows_10_22H2-MSVC2019-Windows-Windows_10_22H2-X86_64.7z" `
          -OutFile qt-svg.7z
        7z x qt-base.7z -oqt
        7z x qt-svg.7z -oqt
        echo "CMAKE_PREFIX_PATH=qt\6.6.0\msvc2019_64" >> $env:GITHUB_ENV
    - name: Restore Cargo home
      uses: actions/cache/restore@v4
      with:
        path: ~/.cargo
        key: ${{ steps.cache-keys.outputs.cargo }}
    - name: Restore Vulkan SDK
      uses: actions/cache/restore@v4
      with:
        path: C:\VulkanSDK
        key: ${{ steps.cache-keys.outputs.vulkan }}
      id: restore-vulkan
    - name: Install Vulkan SDK
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.239.0/windows/VulkanSDK-1.3.239.0-Installer.exe" -OutFile VulkanSDK.exe
        .\VulkanSDK.exe --root C:\VulkanSDK --accept-licenses --default-answer --confirm-command install
        echo "new-install=true" >> $env:GITHUB_OUTPUT
      id: install-vulkan
      if: ${{ steps.restore-vulkan.outputs.cache-hit != 'true' }}
    - name: Set Vulkan SDK path
      run:  echo "VULKAN_SDK=C:\VulkanSDK" >> $env:GITHUB_ENV
    - name: Update Rust
      run: rustup update stable
    - name: Add additional Rust targets
      run: rustup target add x86_64-unknown-none
    - name: Run CMake
      run: cmake --preset windows-release .
    - name: Build
      run: cmake --build --preset windows-release
    - name: Run tests
      run: cargo test --workspace --exclude core
      working-directory: src
    - name: Export artifacts
      run: cmake --install build --prefix dist
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obliteration-win-x64
        path: dist
    - name: Cache Vulkan SDK
      uses: actions/cache/save@v4
      with:
        path: C:\VulkanSDK
        key: ${{ steps.cache-keys.outputs.vulkan }}
      if: startsWith(github.ref, 'refs/heads/') && steps.install-vulkan.outputs.new-install == 'true'
    - name: Cache Cargo home
      uses: actions/cache/save@v4
      with:
        path: ~/.cargo
        key: ${{ steps.cache-keys.outputs.cargo }}-${{ github.run_id }}
      if: startsWith(github.ref, 'refs/heads/')
