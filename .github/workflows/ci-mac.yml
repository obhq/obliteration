name: CI (Mac)
on:
  workflow_call:
jobs:
  build:
    name: Mac
    runs-on: macos-12
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: '3'
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: Generate cache keys
      run: |
        echo "cargo=${{ runner.os }}-cargo" >> $GITHUB_OUTPUT
        echo "build=${{ runner.os }}-build-files-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake', 'CMakePresets.json') }}" >> $GITHUB_OUTPUT
      id: cache-keys
    - name: Restore Cargo home
      uses: actions/cache/restore@v3
      with:
        path: ~/.cargo
        key: ${{ steps.cache-keys.outputs.cargo }}
    - name: Restore build files
      uses: actions/cache/restore@v3
      with:
        path: |
          build
          src/target
        key: ${{ steps.cache-keys.outputs.build }}
    - name: Install Qt
      run: |
        brew install p7zip
        curl -Lo qt-base.7z https://download.qt.io/online/qtsdkrepository/mac_x64/desktop/qt6_660/qt.qt6.660.clang_64/6.6.0-0-202310040910qtbase-MacOS-MacOS_12-Clang-MacOS-MacOS_12-X86_64-ARM64.7z
        curl -Lo qt-svg.7z https://download.qt.io/online/qtsdkrepository/mac_x64/desktop/qt6_660/qt.qt6.660.clang_64/6.6.0-0-202310040910qtsvg-MacOS-MacOS_12-Clang-MacOS-MacOS_12-X86_64-ARM64.7z
        7za x qt-base.7z -oqt
        7za x qt-svg.7z -oqt
        echo "CMAKE_PREFIX_PATH=qt/6.6.0/macos" >> $GITHUB_ENV
    - name: Run CMake
      run: cmake --preset mac-release .
    - name: Build
      run: cmake --build --preset mac-release
    - name: Run tests
      run: cargo test --workspace --exclude core
      working-directory: src
    - name: Run Clippy
      run: cargo clippy --release
      working-directory: src
    - name: Create Application Bundle
      run: |
        cmake --install build --prefix .
        mkdir dist
        mv obliteration.app dist/Obliteration.app
    - name: Fix library paths
      run: |
        app="dist/Obliteration.app/Contents/MacOS/obliteration"
        krn="dist/Obliteration.app/Contents/MacOS/obkrnl"

        install_name_tool -change '@rpath/QtWidgets.framework/Versions/A/QtWidgets' '@executable_path/../Frameworks/QtWidgets.framework/Versions/A/QtWidgets' "$app"
        install_name_tool -change '@rpath/QtGui.framework/Versions/A/QtGui' '@executable_path/../Frameworks/QtGui.framework/Versions/A/QtGui' "$app"
        install_name_tool -change '@rpath/QtCore.framework/Versions/A/QtCore' '@executable_path/../Frameworks/QtCore.framework/Versions/A/QtCore' "$app"

        otool -L "$app"
        otool -L "$krn"
    - name: Create Apple Disk Image
      run: hdiutil create -volname Obliteration -srcfolder dist Obliteration.dmg
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: obliteration-mac-intel
        path: Obliteration.dmg
    - name: Cache build files
      uses: actions/cache/save@v3
      with:
        path: |
          build
          src/target
        key: ${{ steps.cache-keys.outputs.build }}-${{ github.run_id }}
      if: startsWith(github.ref, 'refs/heads/')
    - name: Cache Cargo home
      uses: actions/cache/save@v3
      with:
        path: ~/.cargo
        key: ${{ steps.cache-keys.outputs.cargo }}-${{ github.run_id }}
      if: startsWith(github.ref, 'refs/heads/')
