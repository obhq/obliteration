name: Release Compilation

on:
  push:
      tags:
      - 'v*.*.*'

env:
  version: ${{ github.ref_name }}

concurrency: ci-${{ github.ref }}
jobs:
  build_release:
    name: Build Releases
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-12]
        include:
          - os: windows-2022
            release_suffix: windows
          - os: ubuntu-22.04
            release_suffix: linux
          - os: macos-12
            release_suffix: mac
    runs-on: ${{ matrix.os }}
    steps:
    # Checkout and Install QT (Both OSes)

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          cache-key-prefix: ${{ runner.os }}-install-qt-action
          version: 6.2.*

    # Windows Specific Setup

      - name: Cache Vulkan SDK (Windows)
        if: matrix.release_suffix == 'windows'
        id: cache-vulkan
        uses: actions/cache@v3.2.6
        with:
          path: C:\VulkanSDK
          key: ${{ runner.os }}-vulkanSDK

      - name: Install Vulkan SDK (Windows)
        if: matrix.release_suffix == 'windows' && ${{ steps.cache-vulkan.outputs.cache-hit != 'true' }}
        run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.239.0/windows/VulkanSDK-1.3.239.0-Installer.exe" -OutFile VulkanSDK.exe
          .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install
          echo "VULKAN_SDK=C:\VulkanSDK" >> $env:GITHUB_ENV

    # Ubuntu Specific Setup

      - name: Install system dependencies (Ubuntu)
        if: matrix.release_suffix == 'linux'
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.239-jammy.list https://packages.lunarg.com/vulkan/1.3.239/lunarg-vulkan-1.3.239-jammy.list
          sudo apt update
          sudo apt install libxkbcommon-dev vulkan-sdk

          echo "VULKAN_SDK=/usr" >> $GITHUB_ENV

    # Build and Release (Both OSes)

      - name: Run CMake
        run: cmake --preset ${{ matrix.release_suffix }}-release .

      - name: Build
        run: cmake --build --preset ${{ matrix.release_suffix }}-release

      - name: Export artifacts
        run: cmake --install build --prefix dist

      - name: ZIP Obliteration (WINDOWS ONLY | UBUNTU BROKEN)
        if: matrix.release_suffix == 'windows'
        uses: TheDoctor0/zip-release@main
        with:
          type: 'zip'
          path: './dist/*'
          filename: Obliteration-${{ env.version }}-${{ matrix.release_suffix }}.zip

      - name: Release Executable (WINDOWS ONLY | UBUNTU BROKEN)
        if: matrix.release_suffix == 'windows'
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "Obliteration-${{ env.version }}-${{ matrix.release_suffix }}.zip"
          generateReleaseNotes: true
          name: Release ${{ env.version }}
          tag: ${{ env.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
